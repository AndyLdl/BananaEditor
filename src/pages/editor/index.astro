---
// editor/index.astro - BananaEditor专业编辑器页面
// 使用新的简洁功能导航栏

import Layout from "../../layouts/Layout.astro";
import EditorToolbar from "../../components/banana-editor/layout/EditorToolbar.astro";
import EditorCanvas from "../../components/banana-editor/layout/EditorCanvas.astro";
import FunctionNavbar from "../../components/banana-editor/layout/FunctionNavbar.astro";
import ImageGenerator from "../../components/banana-editor/ImageGenerator.astro";
import ImageFusion from "../../components/banana-editor/ImageFusion.astro";
import FusionResultDisplay from "../../components/banana-editor/FusionResultDisplay.astro";

// 获取URL参数中的提示词
const url = Astro.url;
const promptFromUrl = url.searchParams.get("prompt") || "";
const promptIdFromUrl = url.searchParams.get("promptId") || "";

// 编辑器模式配置
const currentMode = url.searchParams.get("mode") || "generate";

// SEO优化配置
const seoConfig = {
  title: "AI图片编辑器 - Nano Banana专业工具 | BananaEditor",
  description:
    "使用nano banana AI技术的专业图片编辑套件，支持AI图片生成和融合功能。",
  keywords: [
    "nano banana",
    "nano banana ai",
    "banana ai",
    "ai图片编辑器",
    "图片生成",
    "图片融合",
  ],
  canonical: "/editor",
};
---

<Layout title={seoConfig.title} description={seoConfig.description}>
  <div class="editor-container">
    <div class="editor-main">
      <!-- 中央画布区域 -->
    </div>
  </div>
</Layout>

<style>
  /* BananaEditor主题色彩系统 */
  :root {
    --banana-primary: #ffd700;
    --banana-secondary: #ffa500;
    --banana-accent: #ff6b35;
    --banana-dark: #2d1810;
    --banana-light: #fff8dc;
    --banana-gradient: linear-gradient(135deg, #ffd700 0%, #ffa500 100%);
    --banana-shadow: 0 4px 12px rgba(255, 215, 0, 0.2);
    --banana-border: #ffe55c;
  }

  /* 编辑器容器布局 */
  .editor-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background: #fafafa;
    font-family:
      -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  }

  .editor-main {
    display: flex;
    flex: 1;
    overflow: hidden;
  }

  /* 画布容器样式 */
  .canvas-container {
    flex: 1;
    position: relative;
    background: white;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 0;
  }

  .ai-modules-container {
    position: absolute;
    top: 0;
    right: 0;
    width: 400px;
    height: 100%;
    background: white;
    border-left: 1px solid #e5e7eb;
    z-index: 5;
    overflow: hidden;
  }

  .ai-module {
    width: 100%;
    height: 100%;
  }

  /* 右侧属性面板 */
  .properties-container {
    width: 320px;
    background: white;
    border-left: 1px solid #e1e5e9;
    overflow-y: auto;
    flex-shrink: 0;
  }

  .properties-content {
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  .properties-section {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .section-title {
    font-size: 14px;
    font-weight: 600;
    color: var(--banana-dark);
    margin: 0;
    padding-bottom: 8px;
    border-bottom: 1px solid #f0f2f5;
  }

  .parameter-group {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .parameter-label {
    display: flex;
    flex-direction: column;
    gap: 6px;
    font-size: 14px;
    font-weight: 500;
    color: var(--banana-dark);
  }

  .parameter-select {
    padding: 8px 12px;
    border: 1px solid #e0e0e0;
    border-radius: 6px;
    background: white;
    font-size: 14px;
    cursor: pointer;
    transition: border-color 0.2s ease;
  }

  .parameter-select:focus {
    border-color: var(--banana-primary);
    outline: none;
  }

  .prompt-input-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .prompt-textarea {
    padding: 12px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    resize: vertical;
    font-family: inherit;
    font-size: 14px;
    line-height: 1.5;
    transition: border-color 0.2s ease;
  }

  .prompt-textarea:focus {
    border-color: var(--banana-primary);
    outline: none;
  }

  .optimize-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    padding: 8px 12px;
    border: 1px solid var(--banana-primary);
    background: transparent;
    color: var(--banana-dark);
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .optimize-btn:hover {
    background: var(--banana-primary);
  }

  .action-buttons {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .primary-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 12px 16px;
    border: none;
    background: var(--banana-gradient);
    color: var(--banana-dark);
    border-radius: 8px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 600;
    transition: all 0.2s ease;
    box-shadow: var(--banana-shadow);
  }

  .primary-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 6px 16px rgba(255, 215, 0, 0.3);
  }

  .secondary-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 12px 16px;
    border: 1px solid var(--banana-primary);
    background: transparent;
    color: var(--banana-dark);
    border-radius: 8px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .secondary-btn:hover {
    background: rgba(255, 215, 0, 0.1);
  }

  /* 提示词来源信息 */
  .prompt-source-info {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    background: rgba(59, 130, 246, 0.1);
    border: 1px solid rgba(59, 130, 246, 0.2);
    border-radius: 6px;
    font-size: 12px;
  }

  .info-icon {
    font-size: 14px;
  }

  .info-text {
    color: #374151;
    font-weight: 500;
  }

  .view-source-btn {
    margin-left: auto;
    padding: 4px 8px;
    border: 1px solid #3b82f6;
    background: transparent;
    color: #3b82f6;
    border-radius: 4px;
    cursor: pointer;
    font-size: 11px;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .view-source-btn:hover {
    background: #3b82f6;
    color: white;
  }

  /* 响应式设计 */
  @media (max-width: 1200px) {
    .ai-modules-container {
      width: 350px;
    }

    .properties-container {
      width: 280px;
    }
  }

  @media (max-width: 768px) {
    .editor-main {
      flex-direction: column;
    }

    .properties-container {
      width: 100%;
      height: 200px;
      border-left: none;
      border-top: 1px solid #e1e5e9;
    }

    .ai-modules-container {
      position: fixed;
      top: 60px;
      left: 0;
      right: 0;
      bottom: 200px;
      width: 100%;
      border-left: none;
      border-top: 1px solid #e5e7eb;
      transform: translateY(100%);
      transition: transform 0.3s ease;
      z-index: 20;
    }

    .ai-modules-container.show {
      transform: translateY(0);
    }
  }
</style>

<script>
  // 编辑器页面交互逻辑
  document.addEventListener("DOMContentLoaded", () => {
    // 处理来自提示词库的数据
    const urlParams = new URLSearchParams(window.location.search);
    const promptFromUrl = urlParams.get("prompt");
    const promptIdFromUrl = urlParams.get("promptId");

    if (promptFromUrl) {
      // 自动填充提示词
      const promptTextarea = document.getElementById("main-prompt-textarea");
      if (promptTextarea) {
        promptTextarea.value = decodeURIComponent(promptFromUrl);
        promptTextarea.dispatchEvent(new Event("input"));
      }

      // 记录使用统计
      if (promptIdFromUrl) {
        recordPromptUsage(promptIdFromUrl);
      }

      // 显示提示信息
      showNotification("已从提示词库加载提示词", "success");
    }

    // 功能导航栏事件处理
    const imageGeneratorModule = document.getElementById(
      "image-generator-module",
    );
    const imageFusionModule = document.getElementById("image-fusion-module");

    // 监听功能切换事件
    document.addEventListener("function:change", (e: any) => {
      const func = e.detail.function;
      console.log("切换到功能:", func);

      // 切换AI功能模块
      if (func === "generate") {
        if (imageGeneratorModule) imageGeneratorModule.style.display = "block";
        if (imageFusionModule) imageFusionModule.style.display = "none";
      } else if (func === "fusion") {
        if (imageGeneratorModule) imageGeneratorModule.style.display = "none";
        if (imageFusionModule) imageFusionModule.style.display = "block";
      } else if (func === "modify") {
        // 修改功能的逻辑
        if (imageGeneratorModule) imageGeneratorModule.style.display = "none";
        if (imageFusionModule) imageFusionModule.style.display = "none";
      }
    });

    // 监听导航栏折叠/展开事件
    document.addEventListener("navbar:toggle", (e: any) => {
      const collapsed = e.detail.collapsed;
      console.log("导航栏状态:", collapsed ? "折叠" : "展开");
    });

    // 生成按钮
    const generateBtn = document.querySelector(".generate-btn");
    if (generateBtn) {
      generateBtn.addEventListener("click", () => {
        console.log("开始生成图片");
        // 这里将在后续任务中实现AI生成逻辑
      });
    }

    // 优化提示词按钮
    const optimizeBtn = document.querySelector(".optimize-btn");
    if (optimizeBtn) {
      optimizeBtn.addEventListener("click", () => {
        console.log("优化提示词");
        // 这里将在后续任务中实现提示词优化逻辑
      });
    }

    // 记录提示词使用统计
    async function recordPromptUsage(promptId: string) {
      try {
        await fetch(`/api/prompts/${promptId}/use`, {
          method: "POST",
        });
      } catch (error) {
        console.error("记录提示词使用失败:", error);
      }
    }

    // 显示通知
    function showNotification(
      message: string,
      type: "success" | "error" | "info" = "info",
    ) {
      console.log(`${type.toUpperCase()}: ${message}`);
      // 这里可以添加实际的通知显示逻辑
    }
  });
</script>
