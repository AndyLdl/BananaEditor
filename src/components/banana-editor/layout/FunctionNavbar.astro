---
// FunctionNavbar.astro - 简洁的功能切换导航栏
// 支持展开/折叠，展开时显示图标+标题，折叠时只显示图标

export interface Props {
  activeMode?: "generate" | "modify" | "fusion";
  collapsed?: boolean;
}

const { activeMode = "generate", collapsed = false } = Astro.props;

// 功能配置
const functions = [
  {
    id: "generate",
    icon: "⚡",
    title: "AI Generate",
    description: "Generate images from text",
    enabled: true,
  },
  {
    id: "modify",
    icon: "✏",
    title: "AI Modify",
    description: "Coming Soon",
    enabled: false,
  },
  {
    id: "fusion",
    icon: "⚭",
    title: "Image Fusion",
    description: "Coming Soon",
    enabled: false,
  },
];
---

<div
  class={`function-navbar ${collapsed ? "collapsed" : ""}`}
  id="function-navbar">
  <!-- 折叠/展开按钮 -->
  <button
    class="toggle-btn"
    id="navbar-toggle"
    title={collapsed ? "Expand navbar" : "Collapse navbar"}>
    <span class="toggle-icon">{collapsed ? "›" : "‹"}</span>
  </button>

  <!-- 导航栏内容 -->
  <div class="navbar-content">
    <!-- 品牌区域 -->
    <div class="brand-section">
      <div class="brand-icon">B</div>
      <span class="brand-text">BananaEditor</span>
    </div>

    <!-- 功能列表 -->
    <nav class="functions-nav">
      <h3 class="nav-title">Function Selection</h3>
      <ul class="functions-list">
        {
          functions.map((func) => (
            <li class="function-item">
              <button
                class={`function-btn ${func.id === activeMode ? "active" : ""} ${!func.enabled ? "disabled" : ""}`}
                data-function={func.id}
                title={func.enabled ? func.title : "Coming Soon"}
                disabled={!func.enabled}>
                <span class="function-icon">{func.icon}</span>
                <div class="function-info">
                  <span class="function-title">{func.title}</span>
                  <span class="function-desc">{func.description}</span>
                </div>
                {!func.enabled && <span class="coming-soon-badge">Soon</span>}
              </button>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</div>

<style>
  /* 导航栏容器 */
  .function-navbar {
    width: 280px;
    height: 100%; /* 使用100%适应父容器，父容器已设置为 calc(100vh - 48px) */
    background: linear-gradient(180deg, #ffffff 0%, #fafbfc 100%);
    border-right: 1px solid #e1e5e9;
    position: relative;
    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    flex-shrink: 0;
    z-index: 100;
    order: 1; /* 确保在最左侧 */
  }

  .function-navbar.collapsed {
    width: 80px;
  }

  /* 折叠/展开按钮 */
  .toggle-btn {
    position: fixed;
    top: 50%;
    left: 264px;
    transform: translateY(-50%);
    width: 32px;
    height: 32px;
    background: white;
    border: 1px solid #e1e5e9;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
    color: #6b7280;
    z-index: 99999;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .toggle-btn:hover {
    background: #ffd700;
    color: #2d1810;
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 4px 12px rgba(255, 215, 0, 0.3);
  }

  .toggle-icon {
    font-weight: bold;
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* 导航栏内容 */
  .navbar-content {
    padding: 20px;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  /* 品牌区域 */
  .brand-section {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 32px;
    padding-bottom: 20px;
    border-bottom: 1px solid #f0f2f5;
  }

  .brand-icon {
    width: 32px;
    height: 32px;
    background: linear-gradient(135deg, #ffd700 0%, #ffa500 100%);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    font-weight: 700;
    color: #2d1810;
    flex-shrink: 0;
  }

  .brand-text {
    font-size: 18px;
    font-weight: 700;
    color: #2d1810;
    white-space: nowrap;
    overflow: hidden;
  }

  /* 功能导航 */
  .functions-nav {
    flex: 1;
  }

  .nav-title {
    margin: 0 0 16px 0;
    font-size: 12px;
    font-weight: 600;
    color: #9ca3af;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    white-space: nowrap;
    overflow: hidden;
  }

  .functions-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .function-item {
    width: 100%;
  }

  /* 移除折叠状态下的特殊样式 */

  /* 功能按钮 */
  .function-btn {
    width: 100%;
    display: flex;
    align-items: center;
    gap: 16px;
    padding: 8px;
    border: none;
    background: transparent;
    color: #4b5563;
    border-radius: 12px;
    cursor: pointer;
    text-align: left;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    height: 56px;
    min-height: 56px;
  }

  .function-btn:hover {
    background: rgba(255, 215, 0, 0.1);
    color: #2d1810;
    transform: translateY(-1px);
  }

  .function-btn.active {
    background: linear-gradient(
      135deg,
      rgba(255, 215, 0, 0.2) 0%,
      rgba(255, 166, 0, 0.1) 100%
    );
    color: #2d1810;
    font-weight: 600;
    box-shadow: 0 2px 8px rgba(255, 215, 0, 0.2);
  }

  .function-btn.active::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background: #ffd700;
    border-radius: 0 2px 2px 0;
  }

  /* 禁用状态样式 */
  .function-btn.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  .function-btn.disabled:hover {
    background: transparent;
    color: #9ca3af;
    transform: none;
  }

  .function-btn.disabled .function-icon {
    opacity: 0.6;
  }

  .function-btn.disabled .function-title {
    color: #9ca3af;
  }

  .function-btn.disabled .function-desc {
    color: #d1d5db;
  }

  /* Coming Soon 徽章 */
  .coming-soon-badge {
    position: absolute;
    top: 8px;
    right: 8px;
    background: linear-gradient(135deg, #ffd700 0%, #ffa500 100%);
    color: #2d1810;
    font-size: 10px;
    font-weight: 600;
    padding: 2px 6px;
    border-radius: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 4px rgba(255, 215, 0, 0.3);
  }

  /* 功能图标 */
  .function-icon {
    font-size: 20px;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
  }

  /* 功能信息 */
  .function-info {
    display: flex;
    flex-direction: column;
    gap: 2px;
    flex: 1;
    min-width: 0;
    overflow: hidden;
  }

  .function-title {
    font-size: 14px;
    font-weight: 600;
    line-height: 1.2;
    white-space: nowrap;
    overflow: hidden;
  }

  .function-desc {
    font-size: 12px;
    opacity: 0.7;
    line-height: 1.2;
    white-space: nowrap;
    overflow: hidden;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .function-navbar {
      position: fixed;
      top: 0;
      left: -280px;
      z-index: 1000;
      transition: left 0.3s ease;
      box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);
    }

    .function-navbar.open {
      left: 0;
    }

    .toggle-btn {
      display: none;
    }
  }
</style>

<script>
  // 功能导航栏交互逻辑
  class FunctionNavbar {
    private navbar: HTMLElement | null = null;
    private toggleBtn: HTMLElement | null = null;
    private functionBtns: NodeListOf<HTMLElement> | null = null;
    private isCollapsed: boolean = false;

    constructor() {
      this.init();
    }

    private init(): void {
      this.navbar = document.getElementById("function-navbar");
      this.toggleBtn = document.getElementById("navbar-toggle");
      this.functionBtns = document.querySelectorAll(".function-btn");

      // 从localStorage读取折叠状态
      const savedState = localStorage.getItem("navbar-collapsed");
      this.isCollapsed = savedState === "true";

      if (this.isCollapsed) {
        this.navbar?.classList.add("collapsed");
        // 设置初始按钮位置
        if (this.toggleBtn) {
          this.toggleBtn.style.left = "64px";
        }
      }

      this.setupEventListeners();
    }

    private setupEventListeners(): void {
      // 折叠/展开按钮
      this.toggleBtn?.addEventListener("click", () => {
        this.toggle();
      });

      // 功能按钮点击
      this.functionBtns?.forEach((btn) => {
        btn.addEventListener("click", (e) => {
          const target = e.currentTarget as HTMLElement;
          const functionId = target.dataset.function;
          const isDisabled = target.classList.contains("disabled");

          if (functionId && !isDisabled) {
            this.selectFunction(functionId);
          } else if (isDisabled && functionId) {
            // 显示提示信息
            this.showComingSoonMessage(functionId);
          }
        });
      });

      // 键盘快捷键
      document.addEventListener("keydown", (e) => {
        if (e.ctrlKey && e.key === "b") {
          e.preventDefault();
          this.toggle();
        }
      });
    }

    private toggle(): void {
      this.isCollapsed = !this.isCollapsed;

      if (this.isCollapsed) {
        this.navbar?.classList.add("collapsed");
      } else {
        this.navbar?.classList.remove("collapsed");
      }

      // 更新按钮位置
      if (this.toggleBtn) {
        this.toggleBtn.style.left = this.isCollapsed ? "64px" : "264px";
      }

      // 更新按钮图标
      const toggleIcon = this.toggleBtn?.querySelector(".toggle-icon");
      if (toggleIcon) {
        toggleIcon.textContent = this.isCollapsed ? "›" : "‹";
      }

      // 更新按钮标题
      if (this.toggleBtn) {
        this.toggleBtn.title = this.isCollapsed
          ? "Expand navbar"
          : "Collapse navbar";
      }

      // 保存状态到localStorage
      localStorage.setItem("navbar-collapsed", this.isCollapsed.toString());

      // 触发事件
      document.dispatchEvent(
        new CustomEvent("navbar:toggle", {
          detail: { collapsed: this.isCollapsed },
        })
      );
    }

    private selectFunction(functionId: string): void {
      // 更新按钮状态
      this.functionBtns?.forEach((btn) => {
        const isActive = btn.dataset.function === functionId;
        btn.classList.toggle("active", isActive);
      });

      // 触发功能切换事件
      document.dispatchEvent(
        new CustomEvent("function:change", {
          detail: { function: functionId },
        })
      );

      console.log("Switch to function:", functionId);
    }

    // 公共方法
    public collapse(): void {
      if (!this.isCollapsed) {
        this.toggle();
      }
    }

    public expand(): void {
      if (this.isCollapsed) {
        this.toggle();
      }
    }

    public setActiveFunction(functionId: string): void {
      this.selectFunction(functionId);
    }

    public isNavbarCollapsed(): boolean {
      return this.isCollapsed;
    }

    private showComingSoonMessage(functionId: string): void {
      // 创建提示消息
      const message = document.createElement("div");
      message.className = "coming-soon-toast";
      message.innerHTML = `
        <div class="toast-content">
          <span class="toast-icon">🚧</span>
          <span class="toast-text">This feature is coming soon!</span>
        </div>
      `;

      // 添加样式
      message.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(135deg, #ffd700 0%, #ffa500 100%);
        color: #2d1810;
        padding: 12px 16px;
        border-radius: 12px;
        box-shadow: 0 4px 16px rgba(255, 215, 0, 0.3);
        z-index: 10000;
        font-size: 14px;
        font-weight: 600;
        animation: slideInRight 0.3s ease-out;
        max-width: 300px;
      `;

      // 添加动画样式
      const style = document.createElement("style");
      style.textContent = `
        @keyframes slideInRight {
          from {
            transform: translateX(100%);
            opacity: 0;
          }
          to {
            transform: translateX(0);
            opacity: 1;
          }
        }
        @keyframes slideOutRight {
          from {
            transform: translateX(0);
            opacity: 1;
          }
          to {
            transform: translateX(100%);
            opacity: 0;
          }
        }
        .coming-soon-toast .toast-content {
          display: flex;
          align-items: center;
          gap: 8px;
        }
        .coming-soon-toast .toast-icon {
          font-size: 16px;
        }
      `;
      document.head.appendChild(style);

      document.body.appendChild(message);

      // 3秒后自动移除
      setTimeout(() => {
        message.style.animation = "slideOutRight 0.3s ease-in";
        setTimeout(() => {
          if (message.parentNode) {
            message.parentNode.removeChild(message);
          }
        }, 300);
      }, 3000);
    }
  }

  // 初始化导航栏
  document.addEventListener("DOMContentLoaded", () => {
    const navbar = new FunctionNavbar();

    // 导出到全局作用域
    (window as any).FunctionNavbar = navbar;
  });
</script>
