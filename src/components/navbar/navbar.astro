---
import Container from "@components/container.astro";
import Link from "@components/ui/link.astro";
import Dropdown from "./dropdown.astro";
import LanguageSwitcher from "@components/ui/LanguageSwitcher.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";
import { getTranslations } from "../../i18n/utils";

// 获取当前语言 - 优先使用URL参数，然后检查localStorage，最后默认为英文
let lang = Astro.url.searchParams.get("lang");

// 如果没有URL参数，尝试从localStorage获取（在服务端渲染时无法访问）
if (!lang) {
  // 在服务端，我们无法访问localStorage，所以使用默认语言
  // 客户端会通过JavaScript更新
  lang = "en"; // 默认使用英文而不是中文
}

const t = await getTranslations(lang);

const menuitems = [
  {
    title: t.navigation.home,
    path: "/",
  },
  {
    title: t.navigation.editor,
    path: "/editor",
    badge: true,
  },
  {
    title: t.navigation.prompts,
    path: "/prompts",
    badge: "Coming Soon",
  },
  {
    title: t.navigation.about,
    path: "/about",
  },
  {
    title: t.navigation.contact,
    path: "/contact",
  },
];
---

<Container>
  <header class="flex flex-col lg:flex-row justify-between items-center my-5">
    <Astronav>
      <div class="flex w-full lg:w-auto items-center justify-between">
        <a href="/" class="text-lg brand-logo">
          <span class="font-bold text-banana-dark">Banana</span><span
            class="text-banana-primary">Editor</span
          >
        </a>
        <div class="block lg:hidden">
          <MenuIcon class="w-4 h-4 text-gray-800" />
        </div>
      </div>
      <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
        <ul class="flex flex-col lg:flex-row lg:gap-3">
          {
            menuitems.map((item, index) => (
              <li>
                <a
                  href={item.path}
                  class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-banana-primary transition-colors duration-200">
                  <span>{item.title}</span>
                  {item.badge && (
                    <span class="ml-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-banana-primary rounded-full">
                      New
                    </span>
                  )}
                </a>
              </li>
            ))
          }
        </ul>
        <div class="lg:hidden flex items-center mt-3 gap-4">
          <LanguageSwitcher />
        </div>
      </MenuItems>
    </Astronav>
    <div>
      <div class="hidden lg:flex items-center gap-4">
        <LanguageSwitcher />
        <Link
          href="/editor"
          size="md"
          class="bg-banana-gradient text-white hover:bg-banana-secondary">
          {t.buttons.startEditing}
        </Link>
      </div>
    </div>
  </header>
</Container>

<style>
  .brand-logo {
    background: linear-gradient(135deg, #ffd700 0%, #ffa500 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-size: 1.5rem;
    font-weight: 700;
    text-decoration: none;
  }

  .brand-logo:hover {
    background: linear-gradient(135deg, #ffa500 0%, #ff8c00 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
</style>

<script>
  // 客户端语言检测和更新
  function updateNavigationLanguage() {
    // 获取当前语言
    const urlParams = new URLSearchParams(window.location.search);
    let currentLang = urlParams.get("lang");

    // 如果没有URL参数，从localStorage获取
    if (!currentLang) {
      const stored = localStorage.getItem("banana-editor-language-preference");
      if (stored) {
        try {
          const preference = JSON.parse(stored);
          currentLang = preference.language;
        } catch (e) {
          console.warn("Failed to parse language preference");
        }
      }
    }

    // 如果还是没有，使用默认语言
    if (!currentLang) {
      currentLang = "en";
    }

    // 如果当前语言不是英文，更新页面
    if (currentLang !== "en") {
      const url = new URL(window.location.href);
      url.searchParams.set("lang", currentLang);
      window.location.href = url.toString();
    }
  }

  // 页面加载完成后执行
  document.addEventListener("DOMContentLoaded", updateNavigationLanguage);
</script>
